{{#markdown-convert style='github'}}

## Demonstration

### Simple Text List
We'll start with a very simple list of text items so that we can start to understand the basics
of the `ui-list` addon.

{{/markdown-convert}}

<br>
<div class="flex">
  <div class="flex simple-text-list" style="width: 200px">
    {{ui-list

      items='foo,bar, baz'
      selected=selected
      orient=orientation
      halign=halign
      valign=valign
      fit=fit
      reversed=reversed
      onSelected=(mut selected)

    }}
  </div>

  <div class="flex fill column">
    We're able to achieve the example list component to the left using only the code to the right to achieve these results. Using the controls below you can change some of the display characteristics:

    <div class="flex">
      <div class="flex column orientation">
        <h3>Orientation</h3>
        <div>
          items:
        </div>
        {{ui-toggle-button
          on='vertical'
          onValue='vertical'
          off='horizontal'
          offValue='horizontal'
          size='small'
          value=orientation
          onToggle=(mut orientation)
        }}

        <br>
        <div>
          selected:
        </div>
        {{ui-toggle-button
          on='reversed'
          onValue=true
          off='normal'
          offValue=false
          size='small'
          value=reversed
          onToggle=(mut reversed)
        }}

        <h3>Cardinality</h3>
        {{ui-buttons
          buttons='0:0,0:1,1:1,0:2'
          values=cardinality
          size='tiny'
          onChange=(mut cardinality)
        }}
      </div>
      <div class="flex column">
        <h3>Alignment</h3>
        <div>
          horizontal
          <span class="sidenote">(defaults left)</span>
        </div>
        {{ui-buttons
          buttons='left,center,right,around,between'
          value=halign
          size='small'
          onChange=(mut halign)
        }}

        <br>
        <div>
          vertical
          <span class="sidenote">(default top)</span>
        </div>
        {{ui-buttons
          buttons='top,center,bottom'
          value=valign
          size='small'
          onChange=(mut valign)
        }}

        <br>
        <div>
          fit / fill
          <span class="sidenote">(default fill)</span>
        </div>
        {{ui-toggle-button
          on='fit'
          off='fill'
          value=fit
          size='small'
          width='250px'
          mood='secondary'
          onToggle=(mut fit)
        }}
        <p class="sidenote">
          Note: when setting to <b>FILL</b> the entire row/column (depending on orientation) is filled. This is typically
          what you want but "fit" makes sense if you want items to only use up the space they take.
        </p>
        <p class="sidenote">
          What may not be clear at first is that to preserve the meaning of primary axis alignment we must apply the CSS to either the list or item component depending on fit/fill.
        </p>
      </div>
    </div>

  </div>
  <div class="flex fit self-start column" style="width:250px">
<code class='handlebars'><pre class="h-pad">
\{{ui-list

  items='foo,bar, baz'
  selected=selected
  halign='{{halign}}'
  valign='{{valign}}'
  fit={{fit}}
  orient='{{orientation}}'
  reversed={{reversed}}
  onSelected=(mut selected)

}}
</pre></code>
    <p class="sidenote">
      <b>Note</b>: in this example we're mutating
      {{tag 'selected'}} whenever the {{tag 'onSelected()'}} action is triggered.
    </p>
    <p class="sidenote">
      If you didn't want to have the list be "selectable" then simply don't listen to {{tag 'onSelected()'}}.
    </p>
  </div>
</div>
<br>


{{#markdown-convert style='github'}}
> Note: the dotted line surrounding both demo's is not part of the `ui-list` component itself but added to the demo simply to highlight the area that the widget is operating in.

### Full Utilisation of the _Default Item_
In the "bespoke items" section you'll see that it's very easy to substitute your own "item" component to replace the default but before that let's explore the power of the _default_ item component as it's utility is far greater than illustrated in the example above.

As was mentioned in the Intro section, an item is composed of 1:M "sections". In the case of the default item component, it has three sections: _left, center,_ and _right_. These sections work together to bring a list item similar to what you see below:
{{/markdown-convert}}

<div class="row">
  <div class="demo-full-utilisation flex">
      {{ui-list

        items=(array
          (hash id='pass' title='Passed' icon='check-circle')
          (hash id='unknown'
            title='Unknown Outcome'
            icon='question-circle'
            badge=5
            chevron=true
          )
          (hash id='fail' title='Failed' icon='times-circle')
        )
        selected=selected
        orient='vertical'
        halign=halign
        valign=valign
        fit=fit
        reversed=reversed
        onSelected=(mut selected)

      }}
  </div>

</div>

<br>
{{#markdown-convert style='github'}}
  > **Note**: sections which have no content are simply ignored. That's why the first example only populated the "center" section, whereas in the above example if you remove icon it will collapse the "left" section.
{{/markdown-convert}}