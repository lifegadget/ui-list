{{#demo-css}}
<h3>Component::<code>ui-list</code></h3>

<h4>Overview</h4>
<div class="row">
    <desc>
        The <prop>ui-list</prop> is the default list container which all other list containers are derived from. It does nothing more than list items with very basic styling for the container itself,
        it's main function is to proxy properties into the items it contains as well manage actions coming out of them.
    </desc>
</div>
<h4>Interactive Demo</h4>
<row>
  <widget class='wide'>
  {{#if moodFunction}}
      {{#ui-list
        filter=listFilter
        size=size
        mood=sillyLogic
        skin=skin
        compressed=compressed
        squeezed=squeezed
        sort=sortBy
        gaps=gaps
        sortAscending=sortAscending
        onClick='onClick'
        as |list|
      }}
        {{#each items as |item|}}
          {{ui-item title=item.foo subHeading=item.bar icon=item.icon badge=item.badge list=list}}
        {{/each}}
      {{/ui-list}}
  {{else}}
      {{#ui-list
        filter=listFilter
        size=size
        mood=staticMood
        skin=skin
        compressed=compressed
        squeezed=squeezed
        sort=sortBy
        gaps=gaps
        sortAscending=sortAscending
        onClick='onClick'
        onHover='onHover'
        as |list|
      }}
    {{#each items as |item|}}
      {{ui-item title=item.foo subHeading=item.bar icon=item.icon badge=item.badge list=list}}
    {{/each}}
  {{/ui-list}}
  {{/if}}

  </widget>
  <code class='wide'>
    &nbsp;<br/>
    {{#display-component componentName='ui-list' as='list'
      filter=listFilter
      size=size
      mood='mood'
      skin=skin
      compressed=compressed
      squeezed=squeezed
      sort=sortBy
      gaps=gaps
      sortAscending=sortAscending
      onClick='onClick'
      onHover='onHover'
    }}
    {{#display-component componentName='each' _target='items' as='item' _indent=1}}
        {{display-component componentName='ui-item' _indent=2 title=':item.foo' subHeading=':item.bar' icon=':item.icon' badge=':item.badge' list=':list'}}
    {{/display-component}}

    {{/display-component}}
  </code>
  <description>
    <h4>Inline Format</h4>
    <p>
      Here we are using the inline format but the block format is also available. The one consideration when using block is that vertical gaps are not provided for automatically so you will need to insert <prop>div</prop> tags with the class "gaps" to get spacing set correctly.
    </p>
  </description>
</row>

<h4>Properties</h4>
<row>
  <description>
    List Size: <br/>
    <p>{{radio-buttons buttons='tiny,small,default,large,huge' value=size size='small' defaultValue='default'}}</p><br/>
  </description>
  <description>
    Mood: <br/>
    {{radio-buttons buttons='static,sillyLogic' value=moodStrategy size='small'}}<br/>
    {{#if moodFunction}}
      Mood is defined as a function at the list level (see above) which is proxied into each item. Because it is a function, it then engages dynamic observers to ensure that if inputs to the function change it is updated.
    {{else}}
    Static Moods:<br/>
      {{radio-buttons buttons='default,success,info,warning,error' value=staticMood disable=disableStaticChooser size='small' defaultValue='default'}}
    {{/if}}
  </description>
  <description>
    Skin / Style Family:<br/>
    {{ui-buttons cardinality='1:1' buttons='default,plus,flat,simple' value=skin size='small' stretch=true}}<br/>
  </description>
</row>

{{/demo-css}}
